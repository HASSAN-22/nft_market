{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x45b75878ac96a5d2ed6239d2219b5a32ad0522b8fb13ec6513e98da6bd55aaf7"
  },
  "proxies": [
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xdc60b316515def0d13502e96a74f5adad995b259ef0b83940d2ac91f5e7d72ff",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x65a7a208dc44ea8cfa2c006d54f3df200fcfb0b5824a92b6e65c6dc28b34ba34",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xd8e58614edeba2bc698333ffa6983aecd58c0db6420f78407771a63fa88f2f59",
      "kind": "uups"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xefb02de5fa8bba94871813c4760f61faa6c9dca2d6f219d6d98b8fb95ab82a7b",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x2a7203bd59bfd364d7f7667611c33e9f72480c6cc30bf03fdea0f055063b8f55",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xdf757784e50fc649ad7a64535c6b30128f4012936342bcbd9a57dee75b194575",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x1a937f1209f6e8684c89ecb6fa8042be2a000db359227cfb5ecf773e84c0e6cf",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x032869135aa4640bafab3c5fcb925e4a178ba1d0e92fa32bb0e1108d622579aa",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x2588edaf2785f553a9967a886806009f471975940513f95c891ba7eb5aa02364",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x28710da6634e6156ca5344a61b705284b94f56518fef7be236bb703525fccff3",
      "kind": "uups"
    }
  ],
  "impls": {
    "2a6d8bfe72254c7e38d833b090b3f071dbf31da3bc8cccb2a22ee8853ea1439d": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x934616572c46cea4eb0ebe102efedd0346d1660bbc2ba99e3851d37c83703373",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:523"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)2940_storage",
            "contract": "NFT",
            "src": "contracts/NFT.sol:16"
          },
          {
            "label": "MarketAddress",
            "offset": 0,
            "slot": "452",
            "type": "t_address",
            "contract": "NFT",
            "src": "contracts/NFT.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2940_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d30244c3489d9473e633b9ea0ad7d440f6980f2be6a2441249946d1014ac9a9": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x2b5235554c97a964e45ae82c2717d249c7e0c0f048db116f82c3106abad2924d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "itemCounter",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)754_storage",
            "contract": "Market",
            "src": "contracts/Market.sol:10"
          },
          {
            "label": "traceBuyerCounter",
            "offset": 0,
            "slot": "152",
            "type": "t_struct(Counter)754_storage",
            "contract": "Market",
            "src": "contracts/Market.sol:11"
          },
          {
            "label": "_ownerAccount",
            "offset": 0,
            "slot": "153",
            "type": "t_address_payable",
            "contract": "Market",
            "src": "contracts/Market.sol:19"
          },
          {
            "label": "mmvalue",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/Market.sol:21"
          },
          {
            "label": "_feePercent",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/Market.sol:23"
          },
          {
            "label": "_refreshBidTime",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/Market.sol:25"
          },
          {
            "label": "_expireBidTime",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/Market.sol:27"
          },
          {
            "label": "bidders",
            "offset": 0,
            "slot": "158",
            "type": "t_array(t_struct(Bidders)923_storage)dyn_storage",
            "contract": "Market",
            "src": "contracts/Market.sol:61"
          },
          {
            "label": "traceBuyers",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_struct(TraceBuyers)914_storage)",
            "contract": "Market",
            "src": "contracts/Market.sol:62"
          },
          {
            "label": "items",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_struct(Items)905_storage)",
            "contract": "Market",
            "src": "contracts/Market.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Bidders)923_storage)dyn_storage": {
            "label": "struct Market.Bidders[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC1155Upgradeable)463": {
            "label": "contract IERC1155Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(Items)905_storage)": {
            "label": "mapping(uint256 => struct Market.Items)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TraceBuyers)914_storage)": {
            "label": "mapping(uint256 => struct Market.TraceBuyers)",
            "numberOfBytes": "32"
          },
          "t_struct(Bidders)923_storage": {
            "label": "struct Market.Bidders",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bidPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "created_at",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)754_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Items)905_storage": {
            "label": "struct Market.Items",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expire_at",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "currentBidPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidderValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "created_at",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSold",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "8"
              },
              {
                "label": "auctionStart",
                "type": "t_bool",
                "offset": 22,
                "slot": "8"
              },
              {
                "label": "isBlock",
                "type": "t_bool",
                "offset": 23,
                "slot": "8"
              },
              {
                "label": "nft",
                "type": "t_contract(IERC1155Upgradeable)463",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(TraceBuyers)914_storage": {
            "label": "struct Market.TraceBuyers",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "created_at",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isOriginalSeller",
                "type": "t_bool",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1ed5dad59762789125083330f99e43324ddf8452499aa216cee09ae76e54733": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x4276c020c11554d453b511bb65e41670a5774039f28240bfb1d087b5884b6af5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCount",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)2914_storage",
            "contract": "NFT",
            "src": "contracts/NFT.sol:19"
          },
          {
            "label": "_MarketAddress",
            "offset": 0,
            "slot": "452",
            "type": "t_address",
            "contract": "NFT",
            "src": "contracts/NFT.sol:21"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "453",
            "type": "t_string_storage",
            "contract": "NFT",
            "src": "contracts/NFT.sol:22"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(NFTs)3368_storage)",
            "contract": "NFT",
            "src": "contracts/NFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTs)3368_storage)": {
            "label": "mapping(uint256 => struct NFT.NFTs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2914_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTs)3368_storage": {
            "label": "struct NFT.NFTs",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "created_at",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
